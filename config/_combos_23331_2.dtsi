// Combo parameters
//   timeout-ms:
//     All the keys in key-positions must be pressed within
//     this time in milliseconds to trigger the combo
//   bindings:
//     A behavior to run when the combo is triggered
//   key-positions:
//     A list of key position indices for the keys which should trigger the combo
//   layers:
//     A list of layers on which the combo may be triggered. -1 allows all layers.
//   require-prior-idle-ms:
//     If any non-modifier key is pressed within require-prior-idle-ms
//     before a key in the combo, the key will not be considered for the combo

// * Source: https://github.com/caksoylar/zmk-config
// #define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM, QUICKTAP, ...) \
//     combo_##NAME { \
//         timeout-ms = <TERM>; \
//         bindings = <BINDINGS>; \
//         key-positions = <KEYPOS>; \
//         layers = <LAYERS>; \
//         require-prior-idle-ms = <QUICKTAP>; \
// 		__VA_ARGS__ \
//     };

#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS, TERM) \
    combo_##NAME { \
        timeout-ms = <TERM>; \
        bindings = <BINDINGS>; \
        key-positions = <KEYPOS>; \
        layers = <LAYERS>; \
    };

/*
* KEY POSITIONS
*         ╭─────────────────────╮ ╭─────────────────────╮
* HIGH:   │ LH4 LH3 LH2 LH1     │ │     RH1 RH2 RH3 RH4 │
* MIDDLE: │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
* LOW:    │     LL3 LL2 LL1     │ │     RL1 RL2 RL3     │
* THUMB:  ╰─────────╮   LT1 LT0 │ │ RT0 RT1 ╭───────────╯
*                   ╰───────────╯ ╰─────────╯ 
*/

/ {
    combos {
        compatible = "zmk,combos";

// SECTION - Layers
COMBO(english,      &to ENG,        LT1 RT1,      ENG SYM NAV FUN BLE,     50)
COMBO(heb_to_eng,   &heb_x,         LT1 RT1,      HEB,                     50)
COMBO(function,     &to FUN,        LT0 RT1,      ENG HEB SYM NAV BLE,     50)
COMBO(blth_l,       &to BLE,        LH3 LH2 LH1,  ENG HEB SYM NAV FUN,     50)
COMBO(blth_r,       &to BLE,        RH3 RH2 RH1,  ENG HEB SYM NAV FUN,     50)
COMBO(eng_to_heb,   &to_heb,        LM0 RM0,      ENG,                     50)
COMBO(hebrew,       &to HEB,        LM0 RM0,      SYM NAV FUN BLE,         50)

//!SECTION

// SECTION - General
COMBO(alt_tab,      &atht 0 TAB,    LH4 LM4,      ENG HEB SYM NAV FUN,     20)
COMBO(capslock,     &kp CAPS,       LH1 RH1,      ENG HEB,                 25)
COMBO(capsword,     &caps_word,     LL1 RL1,      ENG HEB SYM NAV FUN,     25)
COMBO(bspc_del,     &mm_bspc_del,   RH1 RM1,      ENG HEB SYM NAV FUN,     25)
COMBO(return,       &kp RETURN,     RH4 RM4,      ENG HEB SYM NAV FUN,     25)
COMBO(escape,       &kp ESCAPE,     RH4 RH3,      ENG HEB SYM NAV FUN,     20)
//!SECTION

// SECTION - Shortcuts
COMBO(copy_paste,   &mm_cpy_pst,    LH4 LH3,      ENG HEB SYM NAV FUN,     20)
COMBO(undo,         &kp LC(Z),      LM4 LL3,      ENG HEB SYM NAV FUN,     20)
COMBO(redo,         &kp LC(Y),      RM4 RL3,      ENG HEB SYM NAV FUN,     20)
COMBO(select_all,   &kp LC(A),      LT0 RM3 RM2,  HEB SYM NAV FUN,         30)
COMBO(find,         &kp LC(F),      LT0 LL2 LL1,  HEB SYM NAV FUN,         30)
COMBO(save,         &kp LC(S),      LT0 LM3 LM2,  HEB SYM NAV FUN,         30)
//!SECTION

// SECTION - Parentheses and Brackets
// Top
// Left
COMBO(lbrkt,        &kp LBKT,       LH3 LH2,      ENG SYM NAV,             20)
COMBO(h_lbrkt,      &kp HE_LBKT,    LH3 LH2,      HEB,                     20)
COMBO(lpar,         &kp LPAR,       LH2 LH1,      ENG SYM NAV,             20)
COMBO(h_lpar,       &kp HE_LPAR,    LH2 LH1,      HEB,                     20)
// Right
COMBO(rpar,         &kp LPAR,       RH2 RH1,      ENG SYM NAV,             20)
COMBO(h_rpar,       &kp HE_LPAR,    RH2 RH1,      HEB,                     20)
COMBO(rbrkt,        &kp RBKT,       RH3 RH2,      ENG SYM NAV,             20)
COMBO(h_rbrkt,      &kp HE_RBKT,    RH3 RH2,      HEB,                     20)

// Top-Middle
// Left
COMBO(lbrc,         &kp LBRC,       LH3 LM3,      ENG SYM NAV,             30)
COMBO(h_lbrc,       &kp HE_LBRC,    LH3 LM3,      HEB,                     30)
// Right
COMBO(rbrc,         &kp RBRC,       RH3 RM3,      ENG SYM NAV,             30)
COMBO(h_rbrc,       &kp HE_RBRC,    RH3 RM3,      HEB,                     30)

// Middle-Bottom
// Left
COMBO(lte,          &mm_lte,        LH2 LM2,      ENG SYM NAV,             30)
COMBO(h_lte,        &mm_hlte,       LH2 LM2,      HEB,                     30)
// Right
COMBO(gte,          &mm_gte,        RH2 RM2,      ENG SYM NAV,             30)
COMBO(h_gte,        &mm_hgte,       RH2 RM2,      HEB,                     30)

//!SECTION

// SECTION - Punctuation and Symbols
// Left
    // Top-Middle
COMBO(ques_excl,    &td_qe,         LH2 LM2,      ENG HEB SYM NAV,         50)
COMBO(sdqt,         &kp SQT,        LH1 LM1,      ENG SYM NAV,             50)
COMBO(h_sdqt,       &mm_hsdq,       LH1 LM1,      HEB,                     50)
    // Middle-Bottom
COMBO(md_code,      &mm_md_code,    LM2 LL2,      ENG HEB SYM NAV,         50)
COMBO(underscore,   &kp UNDER,      LM1 LL1,      ENG HEB SYM NAV,         50)

// Right
    // Top-Middle
COMBO(asterisk,     &kp ASTRK,      RH2 RM2,      ENG HEB SYM NAV,         50)
    // Middle
COMBO(un_equal,     &mm_eq,         RM3 RM1,      ENG HEB SYM NAV,         25)
    // Middle-Bottom
COMBO(hyphen,       &kp MINUS,      RM1 RL1,      ENG HEB SYM NAV,         50)
COMBO(fslash,       &kp FSLH,       RM2 RL2,      ENG SYM NAV,             50)
COMBO(h_fslash,     &kp HE_FSLH,    RM3 RL3,      HEB,                     50)

//!SECTION

// SECTION - English and Hebrew Letters
// Left
#ifdef BIRD
    COMBO(q,         &kp Q,         LM3 LL3,      ENG SYM NAV,             50)
    COMBO(ques_excl, &td_qe,        RM3 RL3,      ENG HEB SYM NAV,         50)
#elifdef APT
    // Left
    COMBO(k,         &kp K,         LM2 LM1,      ENG,                     25)
    COMBO(ck,        &mm_ck,        LH3 LM1,      ENG,                     25)
    COMBO(sk,        &mm_sk,        LM3 LM1,      ENG,                     25)
    COMBO(rk,        &mm_rk,        LM4 LM1,      ENG,                     25)
    COMBO(q,         &kp Q,         LL2 LL1,      ENG,                     25)
    COMBO(qu,        &mm_qu,        LL3 LL1,      ENG,                     25)
    // Right
    COMBO(z,         &kp Z,         RM2 RM1,      ENG,                     25)
    COMBO(zayin,     &kp HE_ZAYIN,  RM2 RM1,      HEB,                     25)
    COMBO(x,         &kp X,         RL2 RL1,      ENG SYM NAV,             25)
    COMBO(xe,        &mm_xe,        RL3 RL1,      ENG,                     25)
    COMBO(ex,        &mm_ex,        RM2 RL1,      ENG,                     25)
    COMBO(ax,        &mm_ax,        RM3 RL1,      ENG,                     25)
    COMBO(ix,        &mm_ix,        RM4 RL1,      ENG,                     25)
#else
    COMBO(z,         &kp Z,         LM3 LL3,   ENG SYM NAV,                50)
    COMBO(zayin,     &kp HE_ZAYIN,  LM3 LL3,   HEB,                    50)
#endif
//!SECTION
    };
};