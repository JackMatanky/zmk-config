/ {    
    macros {
        to_heb: to_hebrew {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &to HEB>;
        };

        heb_x: exit_hebrew_to_english {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &to ENG>;
        };

        // Source: Discord
        // Author: Kites&Darts
        // https://discord.com/channels/719497620560543766/719909884769992755/1174453126716198942
        // https://github.com/damunchkn/zmk-config-fseli/blob/master/config/cradio.keymap
        to_altab: to_alt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LEFT_ALT &kp TAB &mo ATB>,
                <&macro_release &kp TAB>,
                <&macro_pause_for_release>,
                <&macro_release &kp LEFT_ALT &mo ATB>;
        };

        // Source: https://github.com/zmkfirmware/zmk/issues/1806
        // Additional Ref: https://github.com/kaievns/zmk-config/blob/944ecf502cc73f186c83b6228f1225cf6ece5b61/config/cradio.keymap
        // to_altab: to_alt_tab {
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings =
        //         <&macro_press &mo ATB>,
        //         <&macro_pause_for_release>,
        //         <&macro_release &kp LEFT_ALT>,
        //         <&macro_tap &to ENG>;
        // };

        // altab_x: exit_alt_tab {
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings = <&macro_release>, <&kp LEFT_ALT &mo ATB>;
        // };

        ellipsis: ellipsis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp DOT>;
        };

        he_ellipsis: hebrew_ellipsis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HE_DOT &kp HE_DOT &kp HE_DOT>;
        };

        tri_dqt: triple_double_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DQT &kp DQT &kp DQT>;
        };

        he_tri_dqt: hebrew_triple_double_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HE_DQT &kp HE_DQT &kp HE_DQT>;
        };

        tri_ques: triple_question {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp QUESTION &kp QUESTION &kp QUESTION>;
        };

        un_equal: exclamation_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCLAMATION &kp EQUAL>;
        };

        gte: greater_than_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GREATER_THAN &kp EQUAL>;
        };

        he_gte: hebrew_greater_than_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HE_GREATER_THAN &kp HE_EQUAL>;
        };

        lte: less_than_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp EQUAL>;
        };

        he_lte: hebrew_less_than_equal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HE_LESS_THAN &kp HE_EQUAL>;
        };
    };
};