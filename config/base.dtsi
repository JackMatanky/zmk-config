/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// Hebrew Keymap
#include "hebrew.h"

// Extra Keys
#include "shortcut.h"

#define MEH LC(LS(LALT))
#define HYP LC(LS(LA(LGUI)))

// Behaviors Constants
#define long_tap 200
#define short_tap 150

// Combos Constants
// #define default_timeout 50

// Layers
#define ENG     0
#define HEB     1
#define SYS     2
#define FUN     3
#define ATB     4
#define BLE     5

/*
* KEY POSITIONS
*         ╭─────────────────────────╮ ╭─────────────────────────╮
* HIGH:   │  LH4  LH3 LH2 LH1 [LH0] │ │ [RH0] RH1 RH2 RH3  RH4  │
* MIDDLE: │  LM4  LM3 LM2 LM1 [LM0] │ │ [RM0] RM1 RM2 RM3  RM4  │
* LOW:    │ [LL4] LL3 LL2 LL1 [LL0] │ │ [RL0] RL1 RL2 RL3 [RL4] │
* THUMB:  ╰───────────╮   LT1  LT0  │ │  RT0  RT1 ╭─────────────╯
*                     ╰─────────────╯ ╰───────────╯             
*/

// Key position groups and extra key bindings
#ifdef PINKY_2
#   ifdef INNER_2 
// * Dropped bottom inner and pinky keys
#       define KEYS_LL LL3 LL2 LL1
#       define KEYS_RL RL3 RL2 RL1
#       ifdef BIRD
#           define LL4_ENG
#           define LH0_ENG &kp P
#           define LM0_ENG &kp B
#           define LL0_ENG
#           define RH0_ENG &kp K
#           define RM0_ENG &kp J
#           define RL0_ENG
#           define RL4_ENG
#       else
#           define LL4_ENG
#           define LL0_ENG
#           define RL0_ENG
#           define RL4_ENG
#       endif
#       define LL4_HEB
#       define LL0_HEB
#       define RH0_HEB &kp HE_YOD
#       define RM0_HEB &kp HE_MEM
#       define RL0_HEB
#       define RH1_HEB &mm_hnun
#       define RH2_HEB &kp HE_FMEM
#       define RM4_HEB &mm_hpe
#       define RL4_HEB
#       define LL4_SYS
#       define LL0_SYS
#       define RM0_SYS &kp RGUI
#       define RL0_SYS
#       define RL4_SYS
#       define LL4_FUN
#       define LL0_FUN
#       define RM0_FUN &kp RGUI
#       define RL0_FUN
#       define RL4_FUN
#       define LL4_ATB
#       define LL0_ATB
#       define RL0_ATB
#       define RL4_ATB
#       define LL4_BLE
#       define LL0_BLE
#       define RL0_BLE
#       define RL4_BLE
#   else
// * Dropped bottom pinky keys
#       define KEYS_LL LL3 LL2 LL1 LL0
#       define KEYS_RL RL3 RL2 RL1 RL0
#       ifdef BIRD
#           define LL4_ENG
#           define LH0_ENG &kp V
#           define LM0_ENG &kp P
#           define LL0_ENG &kp B
#           define RH0_ENG &kp Z
#           define RM0_ENG &kp K
#           define RL0_ENG &kp J
#           define RL4_ENG
#       else
#           define LL4_ENG
#           define LL0_ENG &kp K
#           define RL0_ENG &kp V
#           define RL4_ENG
#       endif
#       define LL4_HEB
#       define LL0_HEB &kp HE_NUN
#       define RH0_HEB &kp HE_FNUN
#       define RM0_HEB &kp HE_YOD
#       define RL0_HEB &kp HE_MEM
#       define RH1_HEB &kp HE_FMEM
#       define RH2_HEB &kp HE_PE
#       define RM4_HEB &kp HE_FPE
#       define RL4_HEB
#       define LL4_SYS
#       define LL0_SYS &none
#       define RM0_SYS &none
#       define RL0_SYS &kp RGUI
#       define RL4_SYS
#       define LL4_FUN
#       define LL0_FUN &none
#       define RM0_FUN &none
#       define RL0_FUN &kp RGUI
#       define RL4_FUN
#       define LL4_ATB
#       define LL0_ATB &altab_x
#       define RL0_ATB &altab_x
#       define RL4_ATB
#       define LL4_BLE
#       define LL0_BLE &none
#       define RL0_BLE &none
#       define RL4_BLE
#   endif
#else
// * Full thirty-four key layout
#   define KEYS_LL LL4 LL3 LL2 LL1 LL0
#   define KEYS_RL RL4 RL3 RL2 RL1 RL0
#   ifdef BIRD
#       define LL4_ENG &kp Q
#       define LH0_ENG &kp V
#       define LM0_ENG &kp P
#       define LL0_ENG &kp B
#       define RH0_ENG &kp Z
#       define RM0_ENG &kp K
#       define RL0_ENG &kp J
#       define RL4_ENG &td_qe
#   else
#       define LL4_ENG &kp Z
#       define LL0_ENG &kp K
#       define RL0_ENG &kp V
#       define RL4_ENG &td_qe
#   endif
#   define LL4_HEB &kp HE_ZAYIN
#   define LL0_HEB &kp HE_NUN
#   define RH0_HEB &kp HE_FNUN
#   define RM0_HEB &kp HE_YOD
#   define RL0_HEB &kp HE_MEM
#   define RH1_HEB &kp HE_FMEM
#   define RH2_HEB &kp HE_PE
#   define RM4_HEB &kp HE_FPE
#   define RL4_HEB &td_qe
#   define LL4_SYS &none
#   define LL0_SYS &none
#   define RM0_SYS &none
#   define RL0_SYS &kp RGUI
#   define RL4_SYS &none
#   define LL4_FUN &none
#   define LL0_FUN &none
#   define RM0_FUN &none
#   define RL0_FUN &kp RGUI
#   define RL4_FUN &none
#   define LL4_ATB &altab_x
#   define LL0_ATB &altab_x
#   define RL0_ATB &altab_x
#   define RL4_ATB &altab_x
#   define LL4_BLE &none
#   define LL0_BLE &none
#   define RL0_BLE &none
#   define RL4_BLE &none
#endif

# define KEYS_LH LH4 LH3 LH2 LH1 LH0
# define KEYS_LM LM4 LM3 LM2 LM1 LM0
# define KEYS_RH RH4 RH3 RH2 RH1 RH0
# define KEYS_RM RM4 RM3 RM2 RM1 RM0

# define KEYS_L KEYS_LH KEYS_LM KEYS_LL
# define KEYS_R KEYS_RH KEYS_RM KEYS_RL

#include "_combos.dtsi"
#include "_behaviors.dtsi"
#include "_macros.dtsi"
// #include "_mouse.dtsi"

// Behavior Defaults
// Mod-Tap
&mt {
    tapping_term_ms = <200>;
    flavor = "tap-preferred";
};
// Sticky-Key
&sk {
    release-after-ms = <2000>;
    quick-release;
};

&caps_word { continue-list = <BACKSPACE DELETE UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>; };

/ {
    keymap {
        compatible = "zmk,keymap";
#ifdef BIRD
        ENG {
            display-name = "English";
            bindings = <
&kp X    &kp C  &kp L        &kp F              LH0_ENG              RH0_ENG         &kp Y        &kp O        &kp U   &td_stq
&kp R    &kp S  &hml LALT N  &hml LGUI T        LM0_ENG              RM0_ENG         &hmr RGUI H  &hmr RALT E  &kp I   &kp A
LL4_ENG  &kp W  &kp M        &kp G              LL0_ENG              RL0_ENG         &kp D        &mm_cs       &td_dc  RL4_ENG
                             &khst LCTRL LCTRL  &khst LSHFT LSHFT    &sht MEH SPACE  &mm_sys_fn
            >;
        };
#else
        ENG {
            display-name = "English";
            bindings = <
&kp Q    &kp W  &kp C        &kp P              &kp B                &kp J           &kp L        &kp U        &kp Y   &td_stq
&kp A    &kp R  &hml LALT S  &hml LGUI T        &kp G                &kp M           &hmr RGUI N  &hmr RALT E  &kp I   &kp O
LL4_ENG  &kp X  &kp F        &kp D              LL0_ENG              RL0_ENG         &kp H        &mm_cs       &td_dc  RL4_ENG
                             &khst LCTRL LCTRL  &khst LSHFT LSHFT    &sht MEH SPACE  &mm_sys_fn
            >;
        };
#endif
        HEB {
            display-name = "Hebrew";
            bindings = <
&kp HE_QOF    &kp HE_RESH    &kp HE_ALEF         &kp HE_TET        &kp HE_VAV         RH0_HEB      RH1_HEB           RH2_HEB             &mm_htsdi    &td_hstq
&kp HE_SHIN   &kp HE_DALET   &hml LALT HE_GIMEL  &hml LGUI HE_KAF  &kp HE_AYIN        RM0_HEB      &hmr RGUI HE_HET  &hmr RALT HE_LAMED  &kp HE_FKAF  RM4_HEB
LL4_HEB       &kp HE_SAMEKH  &kp HE_BET          &kp HE_HE         LL0_HEB            RL0_HEB      &kp HE_TAV        &mm_hcs             &td_hdc      RL4_HEB
                                                 &trans            &trans             &trans       &trans
            >;
        };

        SYS {
            display-name = "Number-System";
            bindings = <
&none   &kp N7  &kp N8        &kp N9        &mkp LCLK        &mkp RCLK  &kp HOME  &kp UP    &kp END    &kp PG_UP
&kp N0  &kp N4  &hml LALT N5  &hml LGUI N6  &none            RM0_SYS    &kp LEFT  &kp DOWN  &kp RIGHT  &kp PG_DN
LL4_SYS &kp N1  &kp N2        &kp N3        LL0_SYS          RL0_SYS    &kp RALT  &trans    &trans     RL4_SYS
                              &trans        &trans           &trans     &trans
            >;
        };

        FUN {
            display-name = "Function-Shortcut";
            bindings = <
&kp EXIT_APP  &mm_fn7  &mm_fn8  &mm_fn9  &none         &none      &mm_pg_next_prev  &mm_tb_next_prev  &mm_tb_refresh_reopen  &mm_tb_open_close
&mm_fn10      &mm_fn4  &mm_fn5  &mm_fn6  &none         RM0_FUN    &kp PSCRN         &kp CSCRN         &kp C_VOL_UP           &kp C_PP
LL4_FUN       &mm_fn1  &mm_fn2  &mm_fn3  LL0_FUN       RL0_FUN    &trans            &none             &mm_vol_dn_mute        RL4_FUN
                                &trans   &trans        &trans     &trans
            >;
        };

        ATB {
            bindings = <
&altab_x  &altab_x  &altab_x  &altab_x  &altab_x        &altab_x  &altab_x  &kp UP    &altab_x  &altab_x
&altab_x  &altab_x  &altab_x  &altab_x  &altab_x        &altab_x  &kp LEFT  &kp DOWN  &kp RIGHT &altab_x
LL4_ATB   &altab_x  &altab_x  &altab_x  LL0_ATB         RL0_ATB   &altab_x  &altab_x  &altab_x  RL4_ATB
                              &altab_x  &altab_x        &altab_x  &altab_x
            >;
        };

        BLE {
            display-name = "Bluetooth";
            bindings = <
&bootloader   &out OUT_TOG  &out OUT_BLE  &out OUT_USB  &none        &none    &out OUT_USB  &out OUT_BLE  &out OUT_TOG  &bootloader
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none        &none    &none         &none         &none         &none
LL4_BLE       &bt BT_CLR    &bt BT_PRV    &bt BT_NXT    LL0_BLE      RL0_BLE  &bt BT_NXT    &bt BT_PRV    &none         RL4_BLE
                                          &none         &none        &none    &none
            >;
        };
    };
};
