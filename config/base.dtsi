/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

// Hebrew Keymap
#include "hebrew.h"

// Extra Keys
#include "shortcut.h"

#define MEH LC(LS(LALT))
#define HYP LC(LS(LA(LGUI)))

// Behaviors Constants
#define long_tap 200
#define short_tap 150

// Combos Constants
// #define default_timeout 50

// Layers
#define ENG     0
#define HEB     1
#define SYS     2
#define FUN     3
#define ATB     4
#define BLE     5

/*
* KEY POSITIONS
*         ╭─────────────────────────╮ ╭─────────────────────────╮
* HIGH:   │  LH4  LH3 LH2 LH1 [LH0] │ │ [RH0] RH1 RH2 RH3  RH4  │
* MIDDLE: │  LM4  LM3 LM2 LM1 [LM0] │ │ [RM0] RM1 RM2 RM3  RM4  │
* LOW:    │ [LL4] LL3 LL2 LL1 [LL0] │ │ [RL0] RL1 RL2 RL3 [RL4] │
* THUMB:  ╰───────────╮   LT1  LT0  │ │  RT0  RT1 ╭─────────────╯
*                     ╰─────────────╯ ╰───────────╯             
*/

// Key position groups and extra key bindings
#ifdef PINKY_2
// * Dropped bottom pinky keys
#   define LL4_ENG
#   define RL4_ENG
#   define LL4_HEB
#   define RL4_HEB
#   ifdef INNER_0
// * And dropped inner column keys
#       define KEYS_LL LL3 LL2 LL1
#       define KEYS_RL RL3 RL2 RL1
#       define LH0_ENG
#       define LM0_ENG
#       define LL0_ENG
#       define RH0_ENG
#       define RM0_ENG
#       define RL0_ENG
#       define LH0_HEB
#       define LM0_HEB
#       define LL0_HEB
#       define RH0_HEB
#       define RM0_HEB
#       define RL0_HEB
#   elifdef INNER_1
// * And dropped top and bottom inner keys
#       define KEYS_LL LL3 LL2 LL1
#       define KEYS_RL RL3 RL2 RL1
#       define LH0_ENG
#       define LL0_ENG
#       define RH0_ENG
#       define RL0_ENG
#       define LH0_HEB
#       define LL0_HEB
#       define RH0_HEB
#       define RL0_HEB
#       define LM0_HEB &kp HE_AYIN
#   elifdef INNER_2
// * And dropped bottom inner keys
#       define KEYS_LL LL3 LL2 LL1
#       define KEYS_RL RL3 RL2 RL1
#       define LL0_ENG
#       define RL0_ENG
#       define LL0_HEB
#       define RL0_HEB
#       ifdef BIRD
#           define LH0_ENG &kp P
#           define LM0_ENG &kp B
#           define RH0_ENG &kp K
#           define RM0_ENG &kp J
#       endif
#       define LM0_HEB &kp HE_AYIN
#       define RH0_HEB &kp HE_YOD
#       define RM0_HEB &kp HE_MEM
#       define RH1_HEB &mm_hnun
#       define RH2_HEB &kp HE_FMEM
#       define RM4_HEB &mm_hpe
#   else
// * Dropped bottom pinky keys
#       define KEYS_LL LL3 LL2 LL1 LL0
#       define KEYS_RL RL3 RL2 RL1 RL0
#       ifdef BIRD
#           define LH0_ENG &kp V
#           define LM0_ENG &kp P
#           define LL0_ENG &kp B
#           define RH0_ENG &kp Z
#           define RM0_ENG &kp K
#           define RL0_ENG &kp J
#       else
#           define LL0_ENG &kp K
#           define RL0_ENG &kp V
#       endif
#       define LM0_HEB &kp HE_AYIN
#       define LL0_HEB &kp HE_NUN
#       define RH0_HEB &kp HE_FNUN
#       define RM0_HEB &kp HE_YOD
#       define RL0_HEB &kp HE_MEM
#       define RH1_HEB &kp HE_FMEM
#       define RH2_HEB &kp HE_PE
#       define RM4_HEB &kp HE_FPE
#   endif
#else
// * Full thirty-four key layout
#   define KEYS_LL LL4 LL3 LL2 LL1 LL0
#   define KEYS_RL RL4 RL3 RL2 RL1 RL0
#   ifdef BIRD
#       define LL4_ENG &kp Q
#       define LH0_ENG &kp V
#       define LM0_ENG &kp P
#       define LL0_ENG &kp B
#       define RH0_ENG &kp Z
#       define RM0_ENG &kp K
#       define RL0_ENG &kp J
#       define RL4_ENG &td_qe
#   else
#       define LL4_ENG &kp Z
#       define LL0_ENG &kp K
#       define RL0_ENG &kp V
#       define RL4_ENG &td_qe
#   endif
#   define LL4_HEB &kp HE_ZAYIN
#   define LM0_HEB &kp HE_AYIN
#   define LL0_HEB &kp HE_NUN
#   define RH0_HEB &kp HE_FNUN
#   define RM0_HEB &kp HE_YOD
#   define RL0_HEB &kp HE_MEM
#   define RH1_HEB &kp HE_FMEM
#   define RH2_HEB &kp HE_PE
#   define RM4_HEB &kp HE_FPE
#   define RL4_HEB &td_qe
#endif

# define KEYS_LH LH4 LH3 LH2 LH1 LH0
# define KEYS_LM LM4 LM3 LM2 LM1 LM0
# define KEYS_RH RH4 RH3 RH2 RH1 RH0
# define KEYS_RM RM4 RM3 RM2 RM1 RM0

# define KEYS_L KEYS_LH KEYS_LM KEYS_LL
# define KEYS_R KEYS_RH KEYS_RM KEYS_RL

#include "_combos.dtsi"
#include "_behaviors.dtsi"
#include "_macros.dtsi"
// #include "_mouse.dtsi"

// Layers
#include "layer_sys.dtsi"
#include "layer_fun.dtsi"
#include "layer_ble.dtsi"
#include "layer_atb.dtsi"

// Behavior Defaults
// Mod-Tap
&mt {
    tapping_term_ms = <200>;
    flavor = "tap-preferred";
};
// Sticky-Key
&sk {
    release-after-ms = <2000>;
    quick-release;
};

&caps_word { continue-list = <BACKSPACE DELETE UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>; };

/ {
    keymap {
        compatible = "zmk,keymap";
#ifdef BIRD
        ENG {
            display-name = "English";
            bindings = <
&kp X    &kp C  &kp L        &kp F              LH0_ENG              RH0_ENG         &kp Y        &kp O        &kp U   &td_stq
&kp R    &kp S  &hml LALT N  &hml LGUI T        LM0_ENG              RM0_ENG         &hmr RGUI H  &hmr RALT E  &kp I   &kp A
LL4_ENG  &kp W  &kp M        &kp G              LL0_ENG              RL0_ENG         &kp D        &mm_cs       &td_dc  RL4_ENG
                             &khst LCTRL LCTRL  &khst LSHFT LSHFT    &sht MEH SPACE  &mm_sys_fn
            >;
        };
#elifdef APT
        ENG {
            display-name = "English";
            bindings = <
&kp W   &kp C   &kp G       &kp D               LH0_ENG             RH0_ENG         &kp L       &kp U       &kp O   &kp Y
&kp R   &kp S   &hml LALT T &hml LGUI H         LM0_ENG             RM0_ENG         &hmr RGUI N &hmr RALT E &kp A   &kp I
LL4_ENG &kp B   &kp P       &kp F               LL0_ENG             RL0_ENG         &kp M       &mm_cs      &td_dc  RL4_ENG
                            &khst LCTRL LCTRL   &khst LSHFT LSHFT   &sht MEH SPACE  &mm_sys_fn
            >;
        };
#else
        ENG {
            display-name = "English";
            bindings = <
&kp Q    &kp W  &kp C        &kp P              &kp B                &kp J           &kp L        &kp U        &kp Y   &td_stq
&kp A    &kp R  &hml LALT S  &hml LGUI T        &kp G                &kp M           &hmr RGUI N  &hmr RALT E  &kp I   &kp O
LL4_ENG  &kp X  &kp F        &kp D              LL0_ENG              RL0_ENG         &kp H        &mm_cs       &td_dc  RL4_ENG
                             &khst LCTRL LCTRL  &khst LSHFT LSHFT    &sht MEH SPACE  &mm_sys_fn
            >;
        };
#endif
        HEB {
            display-name = "Hebrew";
            bindings = <
&kp HE_QOF    &kp HE_RESH    &kp HE_ALEF         &kp HE_TET        &kp HE_VAV         RH0_HEB      RH1_HEB           RH2_HEB             &mm_htsdi    &td_hstq
&kp HE_SHIN   &kp HE_DALET   &hml LALT HE_GIMEL  &hml LGUI HE_KAF  LM0_HEB            RM0_HEB      &hmr RGUI HE_HET  &hmr RALT HE_LAMED  &kp HE_FKAF  RM4_HEB
LL4_HEB       &kp HE_SAMEKH  &kp HE_BET          &kp HE_HE         LL0_HEB            RL0_HEB      &kp HE_TAV        &mm_hcs             &td_hdc      RL4_HEB
                                                 &trans            &trans             &trans       &trans
            >;
        };
    };
};
