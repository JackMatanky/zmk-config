/*
* KEY POSITIONS
* 34 Key Matrix
* ╭─────────────────────╮ ╭─────────────────────╮
* │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
* │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
* │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
* ╰───────────╮ LH1 LH0 │ │ RH0 RH1 ╭───────────╯
*             ╰─────────╯ ╰─────────╯ 
*
* ╭────────────────╮ ╭────────────────╮
* │  0  1  2  3  4 │ │  5  6  7  8  9 │
* │ 10 11 12 13 14 │ │ 15 16 17 18 19 │
* │ 20 21 22 23 24 │ │ 25 26 27 28 29 │
* ╰─────────╮ 30 31│ │ 32 33╭─────────╯
*           ╰──────╯ ╰──────╯   
*
* 32 Key Matrix
* ╭────────────────╮ ╭────────────────╮
* │  0  1  2  3  4 │ │  5  6  7  8  9 │
* │ 10 11 12 13 14 │ │ 15 16 17 18 19 │
* ╰──╮ 20 21 22 23 │ │ 24 25 26 27 ╭──╯
*    ╰─────╮ 28 29 │ │ 30 31 ╭─────╯
*          ╰───────╯ ╰───────╯     
* 30 Key Matrix      
* ╭────────────────╮ ╭────────────────╮
* │  0  1  2  3  4 │ │  5  6  7  8  9 │
* │ 10 11 12 13 14 │ │ 15 16 17 18 19 │
* ╰──╮ 20 21 22    │ │    23 24 25 ╭──╯
*    ╰─────╮ 26 27 │ │ 28 29 ╭─────╯
*          ╰───────╯ ╰───────╯    
*/

/ {
    combos {
        compatible = "zmk,combos";

        // To Layer

        combo_english {
            bindings = <&to 0>;
            key-positions = <30 33>;
            timeout-ms = <50>;
        };

        combo_hebrew {
            bindings = <&to_hebrew>;
            key-positions = <14 15>;
            timeout-ms = <50>;
            layers = <0 2 3 5>;
        };

        combo_out_hebrew {
            bindings = <&out_hebrew>;
            key-positions = <14 15>;
            timeout-ms = <50>;
            layers = <1>;
        };

        // combo_number {
        //     bindings = <&to 2>;
        //     key-positions = <30 31>;
        //     timeout-ms = <50>;
        // };

        // combo_keyboard_nav {
        //     bindings = <&to 3>;
        //     key-positions = <32 33>;
        //     timeout-ms = <50>;
        // };

        combo_bluetooth_mid_index {
            bindings = <&to 5>;
            key-positions = <2 3 6 7>;
            timeout-ms = <50>;
        };

        combo_bluetooth_left {
            bindings = <&to 5>;
            key-positions = <0 1 2 3>;
            timeout-ms = <50>;
        };

        // General

        combo_tab {
            bindings = <&mm_alt_tab>;
            key-positions = <0 10>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_escape {
            bindings = <&kp ESCAPE>;
            key-positions = <4 14>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_bspc_del {
            bindings = <&mm_back_del>;
            key-positions = <5 15>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_return {
            bindings = <&kp RETURN>;
            key-positions = <9 19>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_caps {
            bindings = <&kp CAPSLOCK>;
            key-positions = <4 5>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        // Shortcuts
        //Right

        combo_copy {
            bindings = <&kp LC(C)>;
            key-positions = <0 11>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_undo {
            bindings = <&kp LC(Z)>;
            key-positions = <10 21>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        // Left

        combo_paste {
            bindings = <&kp LC(V)>;
            key-positions = <9 18>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        combo_redo {
            bindings = <&kp LC(Y)>;
            key-positions = <19 28>;
            timeout-ms = <50>;
            layers = <0 1 2 3>;
        };

        // Top Row (left to right)

        combo_less_than_equal {
            bindings = <&mm_le>;
            key-positions = <0 1>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_lbrace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <1 2>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_lbracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_lparenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 3>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        // Right

        combo_rparenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_rbracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_rbrace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 8>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_greater_than_equal {
            bindings = <&mm_ge>;
            key-positions = <8 9>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        // Top-Home 
        // Left

        combo_at_sign {
            bindings = <&kp AT_SIGN>;
            key-positions = <1 11>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_hash {
            bindings = <&kp HASH>;
            key-positions = <2 12>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <3 13>;
            timeout-ms = <50>;
            layers = <0 2>;
        };

        combo_shekel {
            bindings = <&kp HE_NEW_SHEQEL>;
            key-positions = <3 13>;
            timeout-ms = <50>;
            layers = <1>;
        };

        // Right

        combo_caret {
            bindings = <&kp CARET>;
            key-positions = <6 16>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_asterisk {
            bindings = <&kp ASTERISK>;
            key-positions = <7 17>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_fslash {
            bindings = <&kp SLASH>;
            key-positions = <8 18>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        // Home-Bottom

        combo_backtick {
            bindings = <&kp GRAVE>;
            key-positions = <11 21>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_underscore {
            bindings = <&kp UNDERSCORE>;
            key-positions = <12 22>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_percent {
            bindings = <&kp PERCENT>;
            key-positions = <13 23>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_bslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <14 24>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        // Left

        combo_pipe {
            bindings = <&kp PIPE>;
            key-positions = <15 25>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_ampersand {
            bindings = <&kp AMPERSAND>;
            key-positions = <16 26>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_plus {
            bindings = <&kp PLUS>;
            key-positions = <17 27>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        combo_hyphen {
            bindings = <&kp MINUS>;
            key-positions = <18 28>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        // Bottom Row (left to right)
        // Left

        combo_tilde {
            bindings = <&kp TILDE>;
            key-positions = <23 24>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };

        // Right

        combo_equal_unequal {
            bindings = <&mm_eq>;
            key-positions = <25 26>;
            timeout-ms = <50>;
            layers = <0 1 2>;
        };
    };
}